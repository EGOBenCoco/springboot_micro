name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Build Maven projects
        run: |
          mvn clean install -DskipTests --file planner-entity/pom.xml
          mvn clean install -DskipTests --file gateway-service/pom.xml
          mvn clean install -DskipTests --file profile-service/pom.xml
          mvn clean install -DskipTests --file post-service/pom.xml
          mvn clean install -DskipTests --file config-service/pom.xml
          mvn clean install -DskipTests --file notification-service/pom.xml
          mvn clean install -DskipTests --file subscriber-service/pom.xml

      - name: Run Unit tests
        run: |
          mvn -Dtest=ProfileServiceTest test --file profile-service/pom.xml
          mvn -Dtest=PostServiceImplTest test --file post-service/pom.xml
          mvn -Dtest=NotificationServiceImplTest test --file notification-service/pom.xml
          mvn -Dtest=SubscriberServiceImplTest test --file subscriber-service/pom.xml

     # - name: Ensure JAR file exists
      #  run: test -f gateway-service/target/gateway-service.jar || exit 1



      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t egokirill/gateway-service:latest ./gateway-service
          docker build -t egokirill/profile-service:latest ./profile-service
          docker build -t egokirill/post-service:latest ./post-service
          docker build -t egokirill/config-service:latest ./config-service
          docker build -t egokirill/notification-service:latest ./notification-service
          docker build -t egokirill/subscriber-service:latest ./subscriber-service
          
          docker push egokirill/gateway-service:latest
          docker push egokirill/profile-service:latest
          docker push egokirill/post-service:latest
          docker push egokirill/config-service:latest
          docker push egokirill/notification-service:latest
          docker push egokirill/subscriber-service:latest


  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0' # Версию kubectl можно изменить на нужную вам

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Authenticate to GKE
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set GKE context
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_LOCATION }} --project ${{ secrets.GKE_PROJECT }}

      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.4' # Версию Helm можно изменить на нужную вам

      # Применение Helm charts
      - name: Deploy with Helm
        run: |
          helm upgrade --install env ./helm-deploy/env
  
      

