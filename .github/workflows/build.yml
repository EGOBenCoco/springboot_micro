name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: devo2
  GKE_ZONE: us-central1-c
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Build Maven projects
        run: |
          mvn clean install -DskipTests --file planner-entity/pom.xml
          mvn clean install -DskipTests --file gateway-service/pom.xml
          mvn clean install -DskipTests --file profile-service/pom.xml
          mvn clean install -DskipTests --file post-service/pom.xml
          mvn clean install -DskipTests --file config-service/pom.xml
          mvn clean install -DskipTests --file notification-service/pom.xml
          mvn clean install -DskipTests --file subscriber-service/pom.xml

      - name: Run Unit tests
        run: |
          mvn -Dtest=ProfileServiceTest test --file profile-service/pom.xml
          mvn -Dtest=PostServiceImplTest test --file post-service/pom.xml
          mvn -Dtest=NotificationServiceImplTest test --file notification-service/pom.xml
          mvn -Dtest=SubscriberServiceImplTest test --file subscriber-service/pom.xml

     # - name: Ensure JAR file exists
      #  run: test -f gateway-service/target/gateway-service.jar || exit 1



      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t egokirill/gateway-service:latest ./gateway-service
          docker build -t egokirill/profile-service:latest ./profile-service
          docker build -t egokirill/post-service:latest ./post-service
          docker build -t egokirill/config-service:latest ./config-service
          docker build -t egokirill/notification-service:latest ./notification-service
          docker build -t egokirill/subscriber-service:latest ./subscriber-service
          
          docker push egokirill/gateway-service:latest
          docker push egokirill/profile-service:latest
          docker push egokirill/post-service:latest
          docker push egokirill/config-service:latest
          docker push egokirill/notification-service:latest
          docker push egokirill/subscriber-service:latest



  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master


      - name: Configure kubectl
        uses: ameydev/gke-kubectl-action@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
          CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
          ZONE_NAME: ${{ env.GKE_ZONE }}
        with:
          args: get nodes
      - name: Verify kubectl configuration
        run: kubectl get nodes

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Deploy with Helm
        run: |
            helm upgrade --install env ./helm-deploy/env
      

